from epicsscan import StepScan
import math
import numpy as np
import hashlib
import os
import time
import platform
import keyring
import pyOlog

def frange(start,end=None,inc=None,p=None):
  if end == None:
    end = start + 0.
    start = 0.
  if inc == None:
    inc = 1.
  if p == None:
    p = 3
  if inc == 0:
    count = 1
  else:
    count = int(math.ceil( (end-start)/inc ))+1 
  L = [None,] * count 
  p = pow(10,p) 

  start = start*p
  end = end*p
  inc = inc*p

  L[0] = float(start)/p
  for i in xrange(1,count):
    L[i] = L[i-1] + float(inc)/p
  
  return L

def prange(start, stop, nsteps):
  return np.linspace(start, stop, nsteps+1)

def get_unique_filename():
  h = hashlib.sha1('{0}{1}{2}'.format(time.time(), os.getlogin(),
                                     platform.node()))
  filename = '/epics/xf/23id/data/{0}.dat'.format(h.hexdigest())
  return filename

def scan(positioners = None, detectors = None,
         start = None, stop = None, step = 1,
         dwelltime = None):
  """Scan macro

  positioners are a list of positioners to scan.
  detectors are a list of detetcors to measure for dwelltime
  """

  attributes = {}

  if type(positioners) != list:
    positioners = [positioners]
  if type(detectors) != list:
    detectors = [detectors]
  if type(start) != list:
    start = [start]
  if type(stop) != list:
    stop = [stop]

  # Now create the log entry for the olog

  #username = os.getlogin()
  #c = pyOlog.OlogClient('https://xf23id-ca.cs.nsls2.local:8181/Olog', 
  #                      username = username,
  #                      password = keyring.get_password('olog',username))

  s = StepScan()

  n = step + 1;

  [p.set_array(st,sp,n) for p,st,sp in zip(positioners, start, stop)]
  [s.add_detector(d) for d in detectors]
  [s.add_positioner(p) for p in positioners]

  s.set_dwelltime(dwelltime)

  filename = get_unique_filename()

  attributes['filename'] = filename

  scan_message  = 'Scan started at {0}\n'.format(time.asctime())
  scan_message += 'Filename : {0}\n\n'.format(filename)
  scan_message += 'Dwell Time : {0}\n\n'.format(dwelltime)
  scan_message += 'Positioners\n'
  scan_message += '===========\n'
  for p in positioners:
    scan_message += str(p) + '\n'
  scan_message += '\n'
  scan_message += 'Detectors\n'
  scan_message += '=========\n'
  for d in detectors:
    scan_message += str(d) + '\n'
  

  #c.log(pyOlog.LogEntry(scan_message, username, 
  #           logbooks = [pyOlog.Logbook('Commissioning', 'swilkins')],
  #           tags = [pyOlog.Tag('Autogenerated'), pyOlog.Tag('Scan')]))


  s.pos_settle_time = 1.0
  datafile = s.run(filename = get_unique_filename())
  
  print datafile

